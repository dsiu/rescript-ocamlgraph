// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Hashtbl from "rescript/lib/es6/hashtbl.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as Imperative$Graph from "../src/imperative.bs.js";

function log(prim) {
  console.log(prim);
  
}

function logList(l) {
  var prim = Belt_List.toArray(l);
  console.log(prim);
  
}

function log2(x, y) {
  console.log(y, x);
  
}

function logList2(l, str) {
  var x = Belt_List.toArray(l);
  console.log(str, x);
  
}

var compare = Caml_obj.caml_compare;

var equal = Caml_obj.caml_equal;

var Str = {
  compare: compare,
  equal: equal,
  hash: Hashtbl.hash
};

var G = Imperative$Graph.Digraph.ConcreteBidirectional({
      compare: compare,
      hash: Hashtbl.hash,
      equal: equal
    });

function createSampleGraph(l) {
  var g = Curry._2(G.create, undefined, undefined);
  Belt_List.forEach(l, (function (param) {
          var v = param[0];
          return Belt_List.forEach(param[1], (function (y) {
                        return Curry._3(G.add_edge, g, v, y);
                      }));
        }));
  return g;
}

var sample1 = createSampleGraph({
      hd: [
        "u",
        {
          hd: "v",
          tl: {
            hd: "x",
            tl: /* [] */0
          }
        }
      ],
      tl: {
        hd: [
          "v",
          {
            hd: "y",
            tl: /* [] */0
          }
        ],
        tl: {
          hd: [
            "w",
            {
              hd: "z",
              tl: {
                hd: "y",
                tl: /* [] */0
              }
            }
          ],
          tl: {
            hd: [
              "x",
              {
                hd: "v",
                tl: /* [] */0
              }
            ],
            tl: {
              hd: [
                "y",
                {
                  hd: "x",
                  tl: /* [] */0
                }
              ],
              tl: {
                hd: [
                  "z",
                  {
                    hd: "z",
                    tl: /* [] */0
                  }
                ],
                tl: /* [] */0
              }
            }
          }
        }
      }
    });

export {
  log ,
  logList ,
  log2 ,
  logList2 ,
  Str ,
  G ,
  createSampleGraph ,
  sample1 ,
  
}
/* G Not a pure module */
